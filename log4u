#!/usr/bin/env ksh

[ ! -z $BASH_VERSION ] && gLogCommand="echo -e" || gLogCommand="print"

gLevDebug=4
gLevInfo=3
gLevWarn=2
gLevErr=1
gLevFail=0

gLevNames[$gLevDebug]=DEBUG
gLevNames[$gLevInfo]=INFO
gLevNames[$gLevWarn]=WARN
gLevNames[$gLevErr]=ERROR
gLevNames[$gLevFail]=FAIL

gLogInit=0
gLogDebug=

gLogColorRed=31
gLogColorGreen=32
gLogColorYellow=33
gLogColorPurple=35
gLogColorWhite=37

logReset() {
	gLogInit=0
	gLevLog=$gLevInfo
	gLogConsole=1
	unset gLogColors
	unset gLogFile
	unset gLogAppend
}

logStatus() {
	$gLogCommand "gLogInit=$gLogInit, gLogColors=$gLogColors, gLevLog=${gLevNames[$gLevLog]}, gLogConsole=$gLogConsole, gLogFile=$gLogFile, gLogAppend=$gLogAppend" 
}

logSetLevel() {
	if [ $gLogDebug ]; then set -vx; fi
	let lCont=0
	for lLevName in ${gLevNames[@]}; do
		if [ "$lLevName" == "$1" ]; then
			gLevLog=$lCont
			break
		fi
		let lCont=lCont+1
	done
	if [ $gLogDebug ]; then set +vx; fi
}

logGetLevel() {
	$gLogCommand ${gLevNames[$gLevLog]}
}

logInit() {
	if [ $gLogDebug ]; then set -vx; fi
	if [ -f "$1" ]; then
		# Color property for log
		grep -i '^LOG4U\.LOGCOLORS' $1 >/dev/null 2>&1
		[ $? -eq 0 ] && gLogColors=1 || gLogColors=0

		# Logging level property
		lLevLogName=$(grep -i '^LOG4U\.LEVEL' $1 | cut -d '=' -f2)
		case $lLevLogName in
			"${gLevNames[$gLevDebug]}")
				gLevLog=$gLevDebug
				;;
			"${gLevNames[$gLevInfo]}")
				gLevLog=$gLevInfo
				;;
			"${gLevNames[$gLevWarn]}")
				gLevLog=$gLevWarn
				;;
			"${gLevNames[$gLevErr]}")
				gLevLog=$gLevErr
				;;
			"${gLevNames[$gLevFail]}")
				gLevLog=$gLevFail
				;;
			*)
				gLevLog=$gLevInfo
				logErr "Invalid property value for property LOG4U.LOGLEVEL. Defaulting to INFO level"
				;;
		esac

		# Logging to console?
		grep -i '^LOG4U\.CONSOLE' $1 >/dev/null 2>&1
		[ $? -eq 0 ] && gLogConsole=1 || gLogConsole=0
	
		# File logging property
		grep -i '^LOG4U\.LOGFILE' $1 >/dev/null 2>&1
		if [ $? -eq 0 ]; then
			# Property is defined
			lLogFile=$(grep -i '^LOG4U\.LOGFILE' $1 | cut -d '=' -f2 | cut -d ',' -f1)
			lLogAppend=$(grep -i '^LOG4U\.LOGFILE.*,.*$' $1 | cut -d '=' -f2 | cut -d ',' -f2)
			if [ ! -z "$lLogFile" ]; then
				gLogFile=$lLogFile
				case $lLogAppend in
					[ad])
						gLogAppend=$lLogAppend
						;;
					*)
						gLogAppend=a
						;;
				esac
			else
				gLogFile=""
				gLogAppend=""
			fi
		fi
		if [ -f "$gLogFile" -a "$gLogAppend" == "d" ]; then
			rm -f "$gLogFile"
		fi
	
		gLogInit=1
	else
		logFail "Failure initializing log4u. Config file $1 not found. Using default values for properties"
		logReset
	fi
	if [ $gLogDebug ]; then set +vx; fi
}

log() {
	if [ $gLogDebug ]; then set -vx; fi
	lBuf="$1"
	lLevCurr=$2
	lColor=$3
	lTm=$(date +"%d/%m/%Y %H:%M:%S")
	if [ ${gLevLog:-$gLevInfo} -ge $lLevCurr ]; then
		if [ ${gLogColors:-0} -eq 1 ]; then
			lMsg="\033[${lColor}m${lTm} - ${gLevNames[$lLevCurr]} - $0: $lBuf\033[37m"
		else
			lMsg="${lTm} - ${gLevNames[$lLevCurr]} - $0: $lBuf"
		fi

		[ ! -z "$gLogFile"   ] && $gLogCommand "$lMsg" >> $gLogFile
		[ ${gLogConsole:-1} -eq 1 ] && $gLogCommand "$lMsg"
	fi
	if [ $gLogDebug ]; then set +vx; fi
}

logDebug() {
	log "$1" $gLevDebug $gLogColorWhite
}

logInfo() {
	log "$1" $gLevInfo $gLogColorWhite
}

logWarn() {
	log "$1" $gLevWarn $gLogColorYellow
}

logErr() {
	log "$1" $gLevErr $gLogColorRed
}

logFail() {
	log "$1" $gLevFail $gLogColorPurple
}
